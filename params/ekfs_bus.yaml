# This is configuration for local pose estmation EKF node
ekf_filter_node_odom:
  ros__parameters:
    two_d_mode: true
    publish_tf: true
    filter_type: "ekf"
    frequency: 25.0
    # sensor_timeout: 0.1

    map_frame: map
    odom_frame: odom                        # odometry frame
    base_link_frame: base_link
    world_frame: odom

# ! subscribe to odom XOR imu, don't fuse data from same sensor
    odom0: imu/odometry    
    odom0_config: [false,  false, false, # X , Y , Z
                    false, false, false, # roll , pitch ,yaw
                    true,  true,  true,  # dX , dY , dZ
                    false, false, false, # droll , dpitch ,dyaw
                    false, false, false] # ddX , ddY , ddZ
    odom0_relative: false
    odom0_differential: true
    odom0_queue_size: 10


    # imu0: imu/data        
    # imu0_config: [false,  false, false,  # X , Y , Z
    #               false,  false,  true,  # roll , pitch ,yaw
    #               false,  false, false,  # dX , dY , dZ
    #               false,  false,  true,  # droll , dpitch ,dyaw
    #               false,  false,  false] # ddX , ddY , ddZ
    # imu0_relative: false                
    # imu0_differential: false
    # imu0_queue_size: 10
    # imu0_remove_gravitational_acceleration: true

    process_noise_covariance: [0.03, 0.0,    0.0,    0.0,    0.0,    0.0,    0.0,     0.0,     0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,
                                0.0,    0.03, 0.0,    0.0,    0.0,    0.0,    0.0,     0.0,     0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,
                                0.0,    0.0,    0.04, 0.0,    0.0,    0.0,    0.0,     0.0,     0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,
                                0.0,    0.0,    0.0,    0.03, 0.0,    0.0,    0.0,     0.0,     0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,
                                0.0,    0.0,    0.0,    0.0,    0.03, 0.0,    0.0,     0.0,     0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,
                                0.0,    0.0,    0.0,    0.0,    0.0,    0.06, 0.0,     0.0,     0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,
                                0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.025, 0.0,     0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,
                                0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,     0.025, 0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,
                                0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,     0.0,     0.05, 0.0,    0.0,    0.0,    0.0,    0.0,    0.0,
                                0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,     0.0,     0.0,    0.002, 0.0,    0.0,    0.0,    0.0,    0.0,
                                0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,     0.0,     0.0,    0.0,    0.002, 0.0,    0.0,    0.0,    0.0,
                                0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,     0.0,     0.0,    0.0,    0.0,    0.004, 0.0,    0.0,    0.0,
                                0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,     0.0,     0.0,    0.0,    0.0,    0.0,    0.01, 0.0,    0.0,
                                0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,     0.0,     0.0,    0.0,    0.0,    0.0,    0.0,    0.01, 0.0,
                                0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,     0.0,     0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.01]
# This is configuration for global pose estmation EKF node
ekf_filter_node_map:
  ros__parameters:
    two_d_mode: true
    publish_tf: true
    filter_type: "ekf"
    frequency: 25.0
    # sensor_timeout: 0.1

    map_frame: map
    odom_frame: odom
    base_link_frame: base_link
    world_frame: map             

    # ! fuse GPS odometry XOR imu for pos in global frame and any additional odom sources. odom/gps generated from same source as imu/data
    # odom0: /wheel/odometry
    odom0: odometry/gps        
    odom0_config: [true,  true,  false, # X , Y , Z
                  false, false, true, # roll , pitch ,yaw
                  false, false, false, # dX , dY , dZ
                  false, false, false,  # droll , dpitch ,dyaw
                  false, false, false] # ddX , ddY , ddZ
    odom0_relative: false
    odom0_differential: false
    odom0_queue_size: 10

    # odom1: imu/odometry    
    # odom1_config: [false,  false, false, # X , Y , Z
    #                 false, false, false, # roll , pitch ,yaw
    #                 true,  true,  true,  # dX , dY , dZ
    #                 false, false, false, # droll , dpitch ,dyaw
    #                 false, false, false] # ddX , ddY , ddZ
    # odom1_relative: false
    # odom1_differential: true
    # odom1_queue_size: 10


    imu0: imu/data
    imu0_config: [false,  false, false,  # X , Y , Z
                  false,  false,  true,  # roll , pitch ,yaw
                  false,  false, false,  # dX , dY , dZ
                  false,  false,  true,  # droll , dpitch ,dyaw
                  false,  false,  false] # ddX , ddY , ddZ
    imu0_relative: false
    imu0_differential: true
    imu0_queue_size: 10
    imu0_remove_gravitational_acceleration: true

    use_control: false

    process_noise_covariance: [0.05, 0.0,    0.0,    0.0,    0.0,    0.0,    0.0,     0.0,     0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,
                              0.0,    0.05, 0.0,    0.0,    0.0,    0.0,    0.0,     0.0,     0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,
                              0.0,    0.0,    0.06, 0.0,    0.0,    0.0,    0.0,     0.0,     0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,
                              0.0,    0.0,    0.0,    0.03, 0.0,    0.0,    0.0,     0.0,     0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,
                              0.0,    0.0,    0.0,    0.0,    0.03, 0.0,    0.0,     0.0,     0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,
                              0.0,    0.0,    0.0,    0.0,    0.0,    0.06, 0.0,     0.0,     0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,
                              0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.025, 0.0,     0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,
                              0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,     0.025, 0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,
                              0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,     0.0,     0.04, 0.0,    0.0,    0.0,    0.0,    0.0,    0.0,
                              0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,     0.0,     0.0,    0.01, 0.0,    0.0,    0.0,    0.0,    0.0,
                              0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,     0.0,     0.0,    0.0,    0.01, 0.0,    0.0,    0.0,    0.0,
                              0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,     0.0,     0.0,    0.0,    0.0,    0.02, 0.0,    0.0,    0.0,
                              0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,     0.0,     0.0,    0.0,    0.0,    0.0,    0.01, 0.0,    0.0,
                              0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,     0.0,     0.0,    0.0,    0.0,    0.0,    0.0,    0.01, 0.0,
                              0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.0,     0.0,     0.0,    0.0,    0.0,    0.0,    0.0,    0.0,    0.015]      

navsat_transform:
  ros__parameters:
    frequency: 10.0
    delay: 2.0
    magnetic_declination_radians: 0.0   
    yaw_offset: 0.0  
    zero_altitude: true
    publish_filtered_gps: true
    use_odometry_yaw: true
    broadcast_cartesian_transform: true
    # broadcast_cartesian_transform_as_parent_frame: true # this is required when we convert GPS waypoint to map frame
    wait_for_datum: false